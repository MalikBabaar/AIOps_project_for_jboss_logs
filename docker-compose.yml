services:
  # --- RabbitMQ Broker ---
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"      # RabbitMQ broker port
      - "15672:15672"    # RabbitMQ management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - aiops_net

  # --- FastAPI Backend ---
  backend:
    build:
      context: .
      dockerfile: Dockerfile  # Use your existing FastAPI Dockerfile
    container_name: fastapi_app
    command: uvicorn app:app --host 0.0.0.0 --port 5000
    ports:
      - "5000:5000"
    depends_on:
      - rabbitmq
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=rpc://
    networks:
      - aiops_net

  # --- Celery Worker ---
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_worker
    command: celery -A celery_app.celery_app worker --loglevel=info
    depends_on:
      - rabbitmq
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=rpc://
    networks:
      - aiops_net

  # --- Flower Monitoring ---
  flower:
    image: mher/flower
    container_name: flower
    command: >
      celery --broker=amqp://guest:guest@rabbitmq:5672// flower
      --port=5555
    ports:
      - "5555:5555"
    depends_on:
      - rabbitmq
      - celery_worker
    networks:
      - aiops_net

  # --- Streamlit Dashboard ---
  streamlit:
    build:
      context: ./Dashboard
      dockerfile: Dockerfile  # Streamlit Dockerfile inside Dashboard folder
    container_name: streamlit_dashboard
    ports:
      - "8501:8501"
    depends_on:
      - backend
    networks:
      - aiops_net

networks:
  aiops_net:
    driver: bridge
