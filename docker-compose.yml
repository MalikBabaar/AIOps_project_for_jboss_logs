services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - aiops_net
    restart: always

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - aiops_net
    restart: always

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi_app
    command: uvicorn app:app --host 0.0.0.0 --port 5000
    ports:
      - "5000:5000"
    depends_on:
      - rabbitmq
      - redis
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      - aiops_net
    restart: always

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_worker
    command: celery -A celery_app worker --loglevel=info
    depends_on:
      - rabbitmq
      - redis
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      - aiops_net
    restart: always

  flower:
    image: mher/flower
    container_name: flower
    command: >
      celery --broker=amqp://guest:guest@rabbitmq:5672// flower --port=5555
    ports:
      - "5555:5555"
    depends_on:
      - rabbitmq
      - celery_worker
    environment:
      - FLOWER_UNAUTHENTICATED_API=true
    networks:
      - aiops_net
    restart: always

  streamlit:
    build:
      context: ./Dashboard
      dockerfile: Dockerfile
    container_name: streamlit_dashboard
    ports:
      - "8501:8501"
    depends_on:
      - backend
    networks:
      - aiops_net

networks:
  aiops_net:
    driver: bridge
